<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Untitled RSS Feed]]></title><description><![CDATA[Untitled RSS Feed]]></description><link>http://github.com/dylan/node-rss</link><generator>NodeJS RSS Module</generator><lastBuildDate>Wed, 18 Jan 2012 05:06:08 GMT</lastBuildDate><atom:link href="/feed.xml" rel="self" type="application/rss+xml"/><item><title><![CDATA[How To Include Other Files]]></title><description><![CDATA[<p>To include other files like images and code snippets into your site, you may either:</p>  <ol><li><p>Place the images in <code>.<span class="regexp">/pages/path</span><span class="regexp">/to/resource</span></code> and it will be copied to the corresponding location in <code>.<span class="regexp">/public/path</span><span class="regexp">/to/resource</span></code> (good for figures and illustrations).</p></li><li><p>Place the images in <code>.<span class="regexp">/themes/path</span><span class="regexp">/to/resource</span></code> and it will be copied to the corresponding location in <code>.<span class="regexp">/themes/path</span><span class="regexp">/to/resource</span></code> (good for client-side js and header images).</p> </li></ol> <p>For example, this image was placed in <code>.<span class="regexp">/pages/how</span>-<span class="identifier">to</span>-<span class="identifier"><span class="keymethods">include</span></span>-<span class="identifier">files</span>/<span class="identifier">turtle</span>.<span class="identifier">png</span></code>:</p>  <p><img src="/how-to-include-other-files/turtle.png" alt=""></p>]]></description><link>http://undefined/how-to-include-other-files</link><guid isPermaLink="true">http://undefined/how-to-include-other-files</guid><dc:creator><![CDATA[Nodejitsu]]></dc:creator><pubDate>Sat, 14 Jan 2012 02:57:59 GMT</pubDate></item><item><title><![CDATA[Blacksmith]]></title><description><![CDATA[<p><em>A static site generator built with Node.js, JSDOM, and Weld.</em></p>  <p><img src="/img/screenshot.png" alt=""></p>  <p>Blacksmith is a static site generator designed for simplicity and ease of use. Blacksmith will generate your content in seconds as a stand-alone static site ( comprised of HTML / CSS ) that can be hosted anywhere with no dependencies. Articles are edited as Markdown files, and themes are just plain HTML and CSS files (no inane microtemplates or strange markup languages).</p>  <p>Static sites are generated using Weld and JSDOM. Blacksmith also ships with a built in Node.js static file server, so Blacksmith can host itself, if you'd like. </p>  <h2>Features</h2> <ul><li>Easy to use</li><li>Can be hosted anywhere, since it generates static HTML/CSS</li><li>Write and Edit articles on the file system using markdown</li><li>JSDOM / Weld based</li><li>Easily create custom themes using plain HTML and CSS ( no micro-templating ! )</li><li>Ships with a robust node.js static server suitable for production </li></ul> <h2>Installing Blacksmith</h2> <pre><code>npm install blacksmith -g</code></pre> <h2>Usage</h2> <p>Now that you have blacksmith, you can use the cli tool to get started!</p>  <h3>Create a new site</h3> <pre><code>blacksmith init</code></pre> <h3>Create a new page</h3> <pre><code>cd myBlog/pages
blacksmith post</code></pre> <h3>Generate a static site</h3> <p><em>This command will generate a new version of your blog using source files from the <code>./pages</code> folder and put the generated content into <code>.<span class="regexp">/public/</span></code>.</em></p>  <pre><code><span class="comment"># In your site's root</span>
blacksmith generate</code></pre> <h3>Serving your static site</h3> <p>You can serve what's in <code>./public</code> on any static HTTP server and it's good to go!</p>  <p>Alternately, blacksmith comes with a simple http server:</p>  <pre><code>blacksmith preview</code></pre> <p>and can be deployed to Nodejitsu as-is:</p>  <pre><code>jitsu deploy</code></pre> <h1>Want to learn more?</h1> <p>Check out the links in the sidebar!</p>]]></description><link>http://undefined.</link><guid isPermaLink="true">http://undefined.</guid><dc:creator><![CDATA[Nodejitsu]]></dc:creator><pubDate>Thu, 03 Nov 2011 18:55:54 GMT</pubDate></item><item><title><![CDATA[How To Publish Content]]></title><description><![CDATA[<p>Each page requires it's own folder in the <code>./pages</code> directory with two important files:</p>  <ul><li><code>.<span class="regexp">/pages/</span>:my-page/content.md</code></li><li><code>.<span class="regexp">/pages/</span>:my-page/page.json</code> </li></ul> <h3>content.md</h3> <p>The articles themselves are parsed as <a href="http://github.github.com/github-flavored-markdown/">github-flavored markdown</a>, which is arguably the best markdown dialect around. Just write your article content in this file as markdown and save it, and blacksmith will do the rest!</p>  <p>For example:</p>  <pre><code> <span class="comment">## Part 1:</span>
 <span class="constant">I</span> <span class="identifier">can</span> **<span class="identifier"><span class="keymethods">type</span></span> <span class="identifier"><span class="keyword">in</span></span> <span class="identifier">bold</span>**!

 <span class="comment">## Part 2:</span>
 *<span class="constant">This</span> <span class="identifier">text</span> <span class="identifier">is</span> <span class="identifier">emphasized!</span>*</code></pre> <p><strong>That's it!</strong> Writing content is easy.</p>  <h3>page.json</h3> <p>Each page has an associated metadata file found in <code>page.json</code>. </p>  <p><strong>For example:</strong></p>  <pre><code>{
  "title": "My Article",
  "author": "Nodejitsu",
  "date": "Fri Aug 19 17:36:01 PDT 2011"
  "tags": ["node", "nodejitsu", "blacksmith"]
}</code></pre> <p>Here is a list of metadata tags that Blacksmith may use:</p>  <ul><li><strong>renderer</strong>: By default, pages are rendered with the "content" renderer, which handles articles and directory views. Specify a renderer if you want the page to show special content. Valid examples include: <ul><li><strong>all</strong>: Render a page that shows <em>all</em> the articles.</li></ul></li><li><strong>title</strong>: The title of the article.</li><li><strong>author</strong>: The author of the article. Cross-referenced with <a href="/manage-authors">authors metadata</a>.</li><li><strong>date</strong>: The date on which the article was published. This string should be parseable by javascript's <a href="http://www.hunlock.com/blogs/Javascript_Dates-The_Complete_Reference"><code>Date</code> constructor</a>.</li><li><strong>tags</strong>: A list of meta tags to attach to your article page.</li><li><strong>preview</strong>: If the renderer is set to <strong>all</strong> and <strong>preview</strong> is truthy, then Blacksmith will render the page with short "preview" versions of all the articles, with a link to the main article page.</li></ul>]]></description><link>http://undefined/publish-content</link><guid isPermaLink="true">http://undefined/publish-content</guid><dc:creator><![CDATA[Nodejitsu]]></dc:creator><pubDate>Thu, 03 Nov 2011 18:55:54 GMT</pubDate></item><item><title><![CDATA[How To Manage Authors]]></title><description><![CDATA[<p>Authors specified in the <code>page.json</code> are cross-referenced against <code>_id</code> parameters from files in the <code>/authors</code> folder. For instance, the value of "Nodejitsu" in the <code>author</code> field of a <code>page.json</code> will load the following data from <code>/authors/nodejitsu.json</code>:</p>  <p><strong>Sample Authors File</strong></p>  <pre><code>{ "_id": "Nodejitsu",
  "name": "Nodejitsu",
  "email": "info@nodejitsu.com",
  "github": "nodejitsu",
  "twitter": "nodejitsu",
  "location": "Worldwide",
  "bio": "Nodejitsu is the creator of what is arguably the best Node.js platform as a service in existence."
}</code></pre> <p>These properties are passed to your themes as an object assigned to <code>metadata.author</code>.</p>]]></description><link>http://undefined/manage-authors</link><guid isPermaLink="true">http://undefined/manage-authors</guid><dc:creator><![CDATA[Nodejitsu]]></dc:creator><pubDate>Thu, 03 Nov 2011 18:55:54 GMT</pubDate></item><item><title><![CDATA[How To Customize Themes]]></title><description><![CDATA[<p>All the HTML in the <code>./themes</code> folder is turned into content pages using <a href="https://github.com/hij1nx/weld">weld</a>! This means that, instead of using typical templating techniques, all you have to do is use CSS element classes for Weld to grab onto.</p>  <h2>article.html</h2> <p>This is the html file used to template "content" pages. Here is a broad overview of article.html's structure:</p>  <h3>weld object:</h3> <ul><li>"content": This is populated by blacksmith's gfm parser/generator.</li><li>"metadata" <ul><li>"title": The title of the article.</li><li>"author": Information about the author of the article. <ul><li>"name": The author's name</li><li>"email": The author's email address</li><li>"github": The author's github username</li></ul></li><li>"date": The date on which the article was written.</li><li>"breadcrumb": A list representing the path. This is used to build a "breadcrumb" link.</li></ul></li><li>"toc": This is populated by blacksmith's Table of Contents generator, and is a nested tree of <code>&lt;ul&gt;</code> elements. </li></ul> <h3>other important html classes:</h3> <ul><li>"if-<tag>": This family of classes is used to show content only if <code>&lt;tag&gt;</code> is defined. For example: </tag></li></ul> <blockquote><p> <em>&lt;span class="if-name"&gt;by &lt;strong class="author"&gt;&lt;span class="name"&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;</em></p></blockquote>  <p>If <code><span class="identifier">author</span>.<span class="identifier"><span class="keymethods">name</span></span></code> does not exist, then the resulting rendering (or lack thereof) would otherwise leave behind:</p>  <blockquote><p> <em>by</em></p></blockquote>  <p>Surrounding this block with <em>&lt;span class="if-name"&gt;&lt;/span&gt;</em> allows for its removal.</p>  <ul><li>"if-not-<tag>": This family of classes is used to remove content if <code>&lt;tag&gt;</code> is undefined. </tag></li></ul> <h2>directory.html</h2> <p>This is the html file used to template directory views, in the case where there is no article at this level. Here is a broad overview of directory.html's structure:</p>  <h3>weld object:</h3> <ul><li>"pwd": The path to the current directory.</li><li>"ls": A list of the current directory's child directories.</li><li>"metadata" <ul><li>"breadcrumb": A list representing the path. This is used to build a "breadcrumb" link.</li></ul></li><li>"toc": This is populated by blacksmith's Table of Contents generator, and is a nested tree of <code>&lt;ul&gt;</code> elements.</li></ul>]]></description><link>http://undefined/customize-themes</link><guid isPermaLink="true">http://undefined/customize-themes</guid><dc:creator><![CDATA[Nodejitsu]]></dc:creator><pubDate>Thu, 03 Nov 2011 18:55:54 GMT</pubDate></item><item><title><![CDATA[How To Configure Blacksmith]]></title><description><![CDATA[<p>The global blacksmith configuration is stored in ./config.json.</p>  <h4>Properties used by Blacksmith:</h4> <ul><li><strong>tags</strong>: A list of tags. This is used to list meta tags that should be on <em>all</em> pages.</li></ul>]]></description><link>http://undefined/global-config</link><guid isPermaLink="true">http://undefined/global-config</guid><dc:creator><![CDATA[Nodejitsu]]></dc:creator><pubDate>Thu, 03 Nov 2011 18:55:54 GMT</pubDate></item></channel></rss>